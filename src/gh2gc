# shellcheck    shell=sh        disable=SC3043,2034,2154
x log init github_action
___x_cmd_repo_synchronize(){
    local github_token="${1}"
    local gitcode_token="${2}"

    x gh --cfg token="${github_token}"
    x gcode --cfg token="${gitcode_token}"
    local http_code
    http_code="$(x curl --suppress-connect-headers -I -L -w "%{http_code}\n"  -s -o /dev/null  "https://github.com/${owner_repo}")"

    github_action:info "http code is ${http_code}"
    [ "${http_code}" != 404 ] || {
        github_action:info "repo create : ${owner_repo}"
        x gcode repo create --visibility public "${owner_repo}"
    }

    (
        git clone https://github.com/"${owner_repo}".git
        cd "${owner_repo}" || {
            github_action:error "cd ${owner_repo} fail, git clone error"
            return 1
        }
        git push https://oauth2:"${gitcode_token}"@gitcode.net/"${owner_repo}".git
        git push https://oauth2:"${gitcode_token}"@gitcode.net/"${owner_repo}".git --tags
        
        github_action:info "run gx gh2gc"
        x gx migrate release gh2gc "${owner_repo}"
    )
}

___x_cmd_repo_man(){
    local github_token="${1}"
    local gitcode_token="${2}"
    while read -r app_name;do
        local owner_repo="x-cmd-build/${app_name}"
        ___x_cmd_repo_synchronize "${github_token}" "${gitcode_token}"
    done < ./src/app_list
} 